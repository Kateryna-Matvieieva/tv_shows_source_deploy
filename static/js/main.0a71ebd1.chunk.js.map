{"version":3,"sources":["constants/constants.js","actions/actions.js","actions/asyncActions.js","containers/SearchForm.js","components/Filter.js","containers/FilterLink.js","containers/SortForm.js","containers/Header.js","components/FilterByItem.js","containers/FilterByItemLink.js","components/TVShows.js","components/Page.js","containers/PageLink.js","components/Pages.js","containers/PagesContainer.js","containers/PageForm.js","components/Pagination.js","components/Loading.js","components/IsError.js","components/Title.js","containers/TVShowsContainer.js","components/App.js","serviceWorker.js","store/store.js","reducers/reducers.js","index.js"],"names":["START_REQUEST","GET_COUNT_OF_PAGES","GET_FILTER","GET_QUERY","GET_ERROR","GET_RESPONSE","GET_GENRES","GET_PAGE","GET_URL","setData","_ref","results","type","payload","setPage","_ref2","page","setPages","_ref3","total_pages","setURL","url","setGenres","_ref4","genres","setFilter","filter","name","error","err","isLoading","loading","loadData","_ref2$page","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","data","wrap","_context2","prev","next","fetch","concat","sent","status","json","length","stop","this","_x2","apply","arguments","SearchForm","input","handler","e","preventDefault","value","trim","query","encodeURIComponent","setQuery","react_default","createElement","onChange","onSubmit","htmlFor","placeholder","ref","node","className","connect","Filter","children","onClick","href","filterType","FilterLink","state","currentPage","countOfPages","SortForm","year","withGenre","withoutGenre","sortBy","options","entries","params","push","label","map","item","join","react_select_esm","isMulti","index","Header","props","onLoad","containers_FilterLink","containers_SearchForm","containers_SortForm","Component","_callee","_context","_x","FilterByItem","showId","id","FilterByItemLink","TVShows","img","src","alt","width","height","Math","round","popularity","first_air_date","genre_ids","undefined","onMouseEnter","currentTarget","innerText","overview","onMouseLeave","slice","containers_FilterByItemLink","Page","PageLink","Pages","num","arr","Array","fill","pageForm","containers_PageLink","key","PagesContainers","PageForm","Pagination","PagesContainer","containers_PageForm","Loading","IsError","class","Title","title","components_IsError","components_Loading","components_Title","components_Pagination","components_TVShows","imgs","App","containers_Header","TVShowsContainer","Boolean","window","location","hostname","match","store","createStore","action","forEach","objectSpread","obj","Image","poster_path","replace","decodeURIComponent","applyMiddleware","thunk","logger","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a71ebd1.chunk.js","sourcesContent":["export const START_REQUEST = 'START_REQUEST';\nexport const GET_COUNT_OF_PAGES = 'GET_COUNT_OF_PAGES';\nexport const GET_FILTER = 'GET_FILTER';\nexport const GET_QUERY = 'GET_QUERY';\nexport const GET_ERROR = 'GET_ERROR';\nexport const GET_RESPONSE = 'GET_RESPONSE';\nexport const GET_GENRES = 'GET_GENRES';\nexport const GET_PAGE = 'GET_PAGE';\nexport const GET_URL = 'GET_URL';","import {\n    START_REQUEST,\n    GET_COUNT_OF_PAGES,\n    GET_PAGE,\n    GET_URL,\n    GET_FILTER,\n    GET_QUERY,\n    GET_ERROR,\n    GET_RESPONSE,\n    GET_GENRES\n} from '../constants/constants';\n\nexport const setData = ({ results }) => ({\n    type: GET_RESPONSE,\n    payload: results\n})\nexport const setPage = ({ page }) => ({\n    type: GET_PAGE,\n    payload: page\n})\nexport const setPages = ({ total_pages }) => ({\n    type: GET_COUNT_OF_PAGES,\n    payload: total_pages\n})\nexport const setURL = (url) => ({\n    type: GET_URL,\n    payload: url\n})\nexport const setGenres = ({ genres }) => ({\n    type: GET_GENRES,\n    payload: genres\n\n})\nexport const setFilter = (filter, name) => ({\n    type: GET_FILTER,\n    payload: {filter, name}\n})\nexport const setQuery = (query) => ({\n    type: GET_QUERY,\n    payload: query\n})\nexport const error = (err) => ({\n    type: GET_ERROR,\n    payload: err\n})\nexport const isLoading = (loading) => ({\n    type: START_REQUEST,\n    payload: loading\n})\n\n","import fetch from 'isomorphic-fetch';\nimport {\n    setData,\n    setPages,\n    setGenres,\n    error,\n    isLoading\n} from './actions';\n\nexport function loadGenres() {\n    return async (dispatch) => {\n        let response = await fetch(`https://api.themoviedb.org/3/genre/tv/list?&api_key=696d475c5616f9c15214877fbdf5bd6e&language=en-US`);\n        if (response.status !== 200) {\n            dispatch(error(true));\n        } else {\n            let data = await response.json();\n            dispatch(setGenres(data));\n        }\n    };\n}\n\nexport function loadData({\n    page = 1,\n    url\n    }) {\n    return async (dispatch) => {\n        dispatch(isLoading(true));\n        let response = await fetch(`${url}&page=${page}`);\n        if (response.status !== 200) {\n            dispatch(error(true));\n        } else {\n            let data = await response.json();\n            if (data.results.length < 1) {\n                dispatch(error(true));\n            } else {\n                dispatch(setPages(data));\n                dispatch(setData(data));\n            }\n        }\n    };\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {loadData} from '../actions/asyncActions';\nimport {setURL, setQuery, setPage} from '../actions/actions';\n\nlet SearchForm = ({dispatch}) => {\n  let input;\n  let handler = (e) => {\n    e.preventDefault();\n    if (!input.value.trim()) {\n      return\n    }\n    let key = `api_key=696d475c5616f9c15214877fbdf5bd6e&language=en-US`;\n    let src = `https://api.themoviedb.org/3`;\n    let query = encodeURIComponent(input.value.trim());\n    let url = `${src}/search/tv?query=${query}&${key}`;\n    dispatch(setURL(url));\n    dispatch(setPage({page: 1}));\n    dispatch(setQuery(query));\n    dispatch(loadData({url}));\n  }\n\n  return (\n    <div>\n      <form\n        onChange=\n        {e => { handler(e) }}\n        onSubmit\n        ={e => {\n        handler(e);\n        input.value = '';\n      }}>\n        <label htmlFor=\"title\">Search</label>\n        <input\n          name=\"title\"\n          placeholder=\"Type title of TV Show\"\n          ref={node => {\n          input = node\n        }}/>\n        <button className=\"submit-button\" type=\"submit\">Search TV Show</button>\n      </form>\n    </div>\n  )\n}\nSearchForm = connect()(SearchForm);\n\nexport default SearchForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ children, onClick }) => {\n\n  return (\n    <a\n      href=\"/\"\n      onClick={e => {\n      e.preventDefault();\n      switch (children) {\n        case 'Popular':\n          onClick({ filterType: 'popular' });\n          break;\n        case 'On the air':\n          onClick({ filterType: 'on_the_air' });\n          break;\n        case 'Top rated':\n          onClick({ filterType: 'top_rated' });\n          break;\n        default:\n          break;\n      }\n    }}>\n      <button>{ children }</button>\n    </a>\n  )\n}\n\nFilter.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Filter;","import {connect} from 'react-redux';\nimport {loadData} from '../actions/asyncActions';\nimport {setURL, setFilter, setPage} from '../actions/actions';\nimport Filter from '../components/Filter';\nfunction mapStateToProps(state) {\n  return {currentPage: state.currentPage, countOfPages: state.countOfPages}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: ({filterType}) => {\n      let key = `api_key=696d475c5616f9c15214877fbdf5bd6e&language=en-US`;\n      let src = `https://api.themoviedb.org/3`;\n      let url = `${src}/tv/${filterType || 'popular'}?${key}`;\n      dispatch(setURL(url));\n      dispatch(setFilter(filterType));\n      dispatch(setPage({page: 1}));\n      dispatch(loadData({url}));\n    }\n  }\n}\n\nconst FilterLink = connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nexport default FilterLink","import React from 'react';\nimport Select from 'react-select';\nimport {connect} from 'react-redux';\nimport {loadData} from '../actions/asyncActions';\nimport {setURL, setPage, setFilter} from '../actions/actions';\n\nlet SortForm = ({ dispatch, genres }) => {\n\n  let year,\n    withGenre,\n    withoutGenre,\n    sortBy;\n  let options = Object.entries(genres);\n  let handler = (e) => {\n    e.preventDefault();\n    let filter = [];\n    let params = '';\n    if (sortBy.state.value) {\n      filter.push(`${sortBy.state.value.label}`);\n      params += `&sort_by=${sortBy.state.value.value}`;\n    }\n    if (year.value) {\n      filter.push(`${year.value} year release`);\n      params += `&first_air_date_year=${year.value}`;\n    }\n    if (withGenre.state.value) {\n      filter.push(`with ${withGenre.state.value.map((item => item.label)).join(', ')} genre`);\n      params += `&with_genres=${withGenre\n        .state\n        .value\n        .map((item => item.value))\n        .join(',')}`;\n    }\n    if (withoutGenre.state.value) {\n      filter.push(`without ${withoutGenre.state.value.map((item => item.label)).join(', ')} genre`);\n      params += `&without_genres=${withoutGenre\n        .state\n        .value\n        .map((item => item.value))\n        .join(',')}`;\n    }\n\n    let key = `api_key=696d475c5616f9c15214877fbdf5bd6e`;\n    let src = `https://api.themoviedb.org/3`;\n    let url = `${src}/discover/tv?language=en-US${params}&${key}`;\n    dispatch(setURL(url));\n    dispatch(setPage({page: 1}));\n    dispatch(setFilter(`${filter.join(', ')}`));\n    dispatch(loadData({url}));\n  }\n\n  return (\n    <div>\n      <form onSubmit ={e => {\n        handler(e)\n      }}>\n        <div className=\"sort-container\">\n          <div className=\"select-class\">\n            <label htmlFor=\"with_genres\">With genres</label>\n            <Select\n              name=\"with_genres\"\n              isMulti={true}\n              ref={node => {\n              withGenre = node\n            }}\n              options=\n              {options.map((item, index) => ({ value: item[0], label: item[1] }) )}/>\n          </div>\n\n          <div className=\"select-class\">\n            <label htmlFor=\"without_genres\">Without genres</label>\n            <Select\n              name=\"without_genres\"\n              isMulti={true}\n              ref={node => {\n              withoutGenre = node\n            }}\n              options=\n              {options.map((item, index) => ({ value: item[0], label: item[1] }) )}/>\n          </div>\n\n          <div className=\"select-class\">\n            <label htmlFor=\"Sort\">Sort</label>\n            <Select\n              name=\"Sort\"\n              ref={node => {\n              sortBy = node\n            }}\n              options={[\n              {\n                value: \"first_air_date.desc\",\n                label: \"The newest\"\n              }, {\n                value: \"first_air_date.asc\",\n                label: \"The oldest\"\n              }, {\n                value: \"vote_average.desc\",\n                label: \"Most voted\"\n              }, {\n                value: \"vote_average.asc\",\n                label: \"Less voted\"\n              }, {\n                value: \"popularity.asc\",\n                label: \"Less popular\"\n              }\n            ]}/>\n          </div>\n        </div>\n        <div className=\"sort-container\">\n          <div className=\"select-class\">\n            <label htmlFor=\"year\">Year of release</label>\n            <input\n              name=\"year\"\n              placeholder=\"Type year of release\"\n              ref={node => {\n              year = node\n            }}/>\n          </div>\n          <button className=\"submit-button\" type=\"submit\">Sort TV Show</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {genres: state.genres}\n}\nSortForm = connect(mapStateToProps)(SortForm);\n\nexport default SortForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {setURL, setFilter} from '../actions/actions';\nimport {loadData, loadGenres} from '../actions/asyncActions';\nimport SearchForm from './SearchForm';\nimport FilterLink from './FilterLink';\nimport SortForm from './SortForm';\n\nclass Header extends Component {\n  componentDidMount() {\n    this\n      .props\n      .onLoad()\n  }\n  render() {\n    return (\n      <header>\n        <h1>Your favorite TV-shows</h1>\n        <div className=\"filter-container\">\n          <div>\n            <FilterLink>Popular</FilterLink>\n            <FilterLink>On the air</FilterLink>\n            <FilterLink>Top rated</FilterLink>\n          </div>\n          <SearchForm/>\n        </div>\n        <SortForm/>\n      </header>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLoad: () => {\n      dispatch(loadGenres())\n      let key = `api_key=696d475c5616f9c15214877fbdf5bd6e&language=en-US`;\n      let src = `https://api.themoviedb.org/3`;\n      let url = `${src}/tv/popular?${key}&page=1`;\n      dispatch(setURL(url));\n      dispatch(setFilter('popular'));\n      dispatch(loadData({url}));\n\n    }\n  }\n}\nexport default connect(null, mapDispatchToProps)(Header);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterByItem = ({ children, showId, onClick, name }) => {\n\n  return (\n    <a\n      href=\"/\"\n      onClick={e => {\n      e.preventDefault();\n      switch (children) {\n        case 'Recommendations':\n          onClick({ filterType: 'recommendations', id: showId, name });\n          break;\n        case 'Similar':\n          onClick({ filterType: 'similar', id: showId, name });\n          break;\n        default:\n          break;\n      }\n    }}>\n      <button>{children}</button>\n    </a>\n  )\n}\n\nFilterByItem.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n  showId: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired\n}\n\nexport default FilterByItem;","import {connect} from 'react-redux';\nimport {loadData} from '../actions/asyncActions';\nimport FilterByItem from '../components/FilterByItem';\nimport {setURL, setFilter, setPage} from '../actions/actions';\n\nfunction mapStateToProps(state) {\n  return {currentPage: state.currentPage, countOfPages: state.countOfPages}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: ({filterType, id, name}) => {\n      let key = `api_key=696d475c5616f9c15214877fbdf5bd6e&language=en-US`;\n      let src = `https://api.themoviedb.org/3`;\n      let url = `${src}/tv/${id}/${filterType}?&${key}`;\n      dispatch(setURL(url));\n      dispatch(setFilter(filterType, name));\n      dispatch(setPage({page: 1}));\n      dispatch(loadData({url}));\n    }\n  }\n}\n\nconst FilterByItemLink = connect(mapStateToProps, mapDispatchToProps)(FilterByItem);\n\nexport default FilterByItemLink;","import React from 'react';\nimport FilterByItemLink from '../containers/FilterByItemLink';\nimport PropTypes from 'prop-types';\n\nconst TVShows = ({item, img, genres, index}) => (\n  <tr>\n    <td>{index}</td>\n    <td>{item.name}\n      <img src={img.src || '../download.png'} alt=\"Poster\" width=\"165\" height=\"268\"/>\n    </td>\n    <td>{Math.round(item.popularity)}</td>\n    <td>{item.first_air_date}</td>\n    <td>{item\n        .genre_ids\n        .map(item => genres[item])\n        .filter(item => item !== undefined)\n        .join(', ')}</td>\n    <td\n      onMouseEnter={(e) => e.currentTarget.innerText = item.overview}\n      onMouseLeave={(e) => e.currentTarget.innerText = item.overview.slice(0, 250) + '.....'}>{item\n        .overview\n        .slice(0, 350) + '.....'}</td>\n    <td>\n      <FilterByItemLink showId={item.id} name={item.name}>Recommendations</FilterByItemLink>\n      <FilterByItemLink showId={item.id} name={item.name}>Similar</FilterByItemLink>\n    </td>\n  </tr>\n)\n\nTVShows.propTypes = {\n  item: PropTypes.object.isRequired,\n  img: PropTypes.object.isRequired,\n  genres: PropTypes.object,\n  index: PropTypes.number.isRequired\n}\n\nexport default TVShows;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Page = ({ children, onClick, currentPage, countOfPages, url }) => {\n\n  return (\n    <a\n      href=\"/\"\n      onClick={e => {\n      e.preventDefault();\n      let page;\n      switch (children) {\n        case 'next':\n          currentPage < countOfPages\n            ? onClick({\n              page: currentPage + 1,\n              url\n            })\n            : page = countOfPages;\n          break;\n        case 'prev':\n          currentPage > 1\n            ? onClick({\n              page: currentPage - 1,\n              url\n            })\n            : page = 1;\n          break;\n        default:\n          break;\n      }\n      if (typeof children == 'number') \n        onClick({page: children, url});\n      }}>\n      <button>{ children }</button>\n    </a>\n  )\n}\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  countOfPages: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired\n}\n\nexport default Page;","import {connect} from 'react-redux';\nimport {loadData} from '../actions/asyncActions';\nimport {setPage} from '../actions/actions';\nimport Page from '../components/Page';\n\nfunction mapStateToProps(state) {\n  return {currentPage: state.currentPage, countOfPages: state.countOfPages, url: state.url}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: ({page, url}) => {\n      dispatch(setPage({page}));\n      dispatch(loadData({url, page}));\n    }\n  }\n}\n\nconst PageLink = connect(mapStateToProps, mapDispatchToProps)(Page);\n\nexport default PageLink;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageLink from '../containers/PageLink';\n\nconst Pages = ({currentPage, countOfPages, url, children}) => {\n  let num = countOfPages > 9\n    ? 9\n    : countOfPages;\n  let arr = new Array(num).fill(undefined);\n  let prev = children[0];\n  let next = children[1];\n  let pageForm = children[2];\n  return (\n    <div>\n      <p>Page {currentPage}\n        from {countOfPages}</p>\n      <div className=\"container\">\n        <div className=\"page-container\">\n          {prev}\n          {arr.map((item, index) => (\n            <PageLink url={url} key={index}>{currentPage + num < countOfPages - currentPage\n                ? currentPage + index\n                : countOfPages + index + 1 - arr.length}</PageLink>\n          ))}\n          {next}\n        </div>\n        {pageForm}\n      </div>\n    </div>\n  )\n}\n\nPages.propTypes = {\n  children: PropTypes.array.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  countOfPages: PropTypes.number.isRequired,\n  url: PropTypes.string\n}\n\nexport default Pages;","import {connect} from 'react-redux';\nimport Pages from '../components/Pages';\n\nfunction mapStateToProps(state) {\n  return {currentPage: state.currentPage, countOfPages: state.countOfPages}\n}\n\nconst PagesContainers = connect(mapStateToProps)(Pages);\n\nexport default PagesContainers;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {setPage} from '../actions/actions'\nimport {loadData} from '../actions/asyncActions'\n\nlet PageForm = ({dispatch, url}) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit\n        ={e => {\n        e.preventDefault()\n        let page = input\n          .value\n          .trim();\n        if (!page || typeof + page !== 'number') {\n          return\n        }\n        dispatch(setPage({page}));\n        dispatch(loadData({url, page}));\n        input.value = '';\n      }}>\n        <input\n          placeholder=\"Type page number\"\n          ref={node => {\n          input = node\n        }}/>\n        <button className=\"submit-button\" type=\"submit\">Go to page</button>\n      </form>\n    </div>\n  )\n}\nfunction mapStateToProps(state) {\n  return {url: state.url}\n}\nPageForm = connect(mapStateToProps)(PageForm);\n\nexport default PageForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PagesContainer from '../containers/PagesContainer';\nimport PageLink from '../containers/PageLink';\nimport PageForm from '../containers/PageForm';\n\nconst Pagination = ({ url }) => {\n\n  return (\n    <div>\n        <PagesContainer url={url}>\n            <PageLink url={url}>prev</PageLink>\n            <PageLink url={url}>next</PageLink>\n            <PageForm/>\n        </PagesContainer>\n     </div>\n\n  );\n}\n\nPagination.propTypes = {\n  url: PropTypes.string\n}\n\nexport default Pagination;","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div className=\"no-data-container\">\n      <img\n        src=\"https://loading.io/spinners/microsoft/lg.rotating-balls-spinner.gif\"\n        alt=\"Loading...\"/>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\n\nconst IsError = () => {\n  return (\n    <div class=\"no-data-container\">\n      <img\n        src=\"https://webmarketingschool.com/wp-content/uploads/2018/03/nojobsfound.png\"\n        alt=\"Sorry, here is an error\"/>\n    </div>\n  )\n}\n\nexport default IsError;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Title = ({state}) => {\n  return (\n    <h2>{state.query\n        ? `The result on \"${state.query}\" query search`\n        : state.name\n          ? `TV Shows ${state.filter} to \"${state.name}\"`\n          : `TV Shows filtered by \"${state.filter}\"`}</h2>\n  )\n}\n\nTitle.propTypes = {\n    state: PropTypes.object.isRequired\n}\n\nexport default Title;","import React from 'react';\nimport TVShows from '../components/TVShows';\nimport Pagination from '../components/Pagination';\nimport Loading from '../components/Loading';\nimport IsError from '../components/IsError';\nimport Title from '../components/Title';\nimport {connect} from 'react-redux';\n\nconst TVTable = ({ state, title }) => {\n  if (state.error) {\n    return (\n      <IsError />\n    )\n  }\n  if (state.loading) {\n    return (\n      <Loading />\n    )\n  }\n  return (\n    <div className=\"tv-table\">\n      <Title state={title}/>\n      <Pagination/>\n      <table>\n        <tbody>\n          <tr>\n            <th>№</th>\n            <th>Title</th>\n            <th>Popularity</th>\n            <th>Year</th>\n            <th>Ganre</th>\n            <th>Description</th>\n            <th>Details</th>\n          </tr>\n          {state\n            .data\n            .map((item, index) => (<TVShows\n              key={index}\n              item={item}\n              img={state.imgs[index]}\n              genres={state.genres}\n              index={state.currentPage * 20 - 19 + index}/>))}\n        </tbody>\n      </table>\n      <Pagination/>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    title: {query: state.query, name: state.name, filter: state.filter},\n    state: state}\n}\n\nexport default connect(mapStateToProps)(TVTable);","import React from 'react';\nimport Header from '../containers/Header';\nimport TVShowsContainer from '../containers/TVShowsContainer';\n\n\nconst App = () => {\n    return (\n      <div>\n        <Header/>\n        <TVShowsContainer/>\n      </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReducer } from '../reducers/reducers';\nimport thunk from \"redux-thunk\";\nimport logger from 'redux-logger';\nconst initialState = {\n    data: [],\n    imgs: [],\n    genres: [],\n    loading: true,\n    error: false,\n    filter: '',\n    name: '',\n    query: '',\n    countOfPages: 1,\n    currentPage: 1,\n    url: ''\n  }\n  \nexport const store = createStore(rootReducer, initialState,  applyMiddleware(thunk, logger))\n","import {    \n      START_REQUEST,\n      GET_COUNT_OF_PAGES,\n      GET_PAGE,\n      GET_URL,\n      GET_FILTER,\n      GET_QUERY,\n      GET_ERROR,\n      GET_RESPONSE,\n      GET_GENRES\n  } from '../constants/constants';\n\n\n\nexport function rootReducer (state, action) {\n          switch(action.type) {\n            case GET_GENRES:\n              let genres = {};\n              action.payload.forEach(item => {genres[item.id] = item.name})\n              return {\n                ...state,\n                genres\n              }\n            case START_REQUEST:\n              return {\n                ...state,\n                loading: action.payload,\n                error: null\n              };\n            case GET_RESPONSE:\n              let imgs = action.payload.map(item => {\n                  let obj = new Image ();\n                  obj.src = item.poster_path ? 'https://image.tmdb.org/t/p/w185_and_h278_bestv2/'+item.poster_path : 'download.png';\n                  return obj;\n              });\n              return {\n                ...state,\n                data: action.payload,\n                imgs,\n                loading: false\n              };\n            case GET_PAGE:\n              return {\n                ...state,\n                currentPage: action.payload\n              };\n            case GET_URL:\n              return {\n                ...state,\n                url: action.payload\n              };\n            case GET_COUNT_OF_PAGES:\n              return {\n                ...state,\n                countOfPages: action.payload\n              };\n            case GET_FILTER:\n              return {\n                ...state,\n                filter: action.payload.filter.replace(/_/g, ' '),\n                name: action.payload.name,\n                query: ''\n              };\n            case GET_QUERY:\n              return {\n                ...state,\n                query: decodeURIComponent(action.payload),\n                filter: '',\n              };\n            case GET_ERROR:\n              return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                data: []\n              };\n        \n            default:\n              return state;\n          }\n        }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}